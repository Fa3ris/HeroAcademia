<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd">


	<import resource="dataSource-context.xml"/>
	
	<!-- ANNOTATIONS ENABLED -->
	<context:annotation-config />
	
	<bean id="hero" class="com.fab.heroacademia.concrete.person.Hero">
		<constructor-arg index="0" ref="sword" />
		<property name="messageSource" ref="messageSource"/>
		<property name="heroDao" ref="heroDao"/>
	</bean>
	
	<bean id="hero2" class="com.fab.heroacademia.concrete.person.Hero">
		 <constructor-arg index="0" value="${foo.bar}"/>
		 <property name="messageSource" ref="messageSource"/>
		 <property name="heroDao" ref="heroDao"/>
	</bean>

	<bean id="civilian" class="com.fab.heroacademia.concrete.person.Civilian"></bean>

	<bean id="sword" class="com.fab.heroacademia.concrete.weapon.Sword"></bean>
	
	
	<!--
		Ordre de recherche
		ex: locale.JAPANESE, message 'hello'
		
		#########
		Exemple 1:
		
		resources :
		
		a) message_ja_JP
		b) message_ja {}
		
		default Locale ex: if fr_FR
		c) message_fr_FR
		d) message_fr {hello = bonjour}
		
		then default
		e) message [hello = BURBUR}
		
		find message_ja -> empty -> default to message BURBUR
		#########
		
		#########
		Exemple 2:
		
		resources :
		
		default Locale ex: if fr_FR
		a) message_fr_FR
		b) message_fr {hello = bonjour}
		
		then default
		c) message [hello = BURBUR}
		
		missing message_ja_JP et message_ja -> default Locale -> message bonjour
		
		#########
		
		
		 
	-->
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>i18n/message</value>
            </list>
        </property>
    </bean>
    

	<!--
		BEANS ARE USED IN ORDER OR DEFINITION
		 	
		if multiple profiles -> take the first appearing
		ex set profiles active dev,prod OR prod,dev
		
		profile 'prod' defined before profile 'dev' -> use this prod property-placeholder
	-->
	
	<!-- no profile set -->
	<beans profile="default">    
      <context:property-placeholder location="classpath:application.properties" />
	</beans>

	<!--
		LAST PROPERTY DEFINED WINS
		 	
		if foo.bar defined in application.properties and application-prod.properties
		value defined in prod.properties wins because it is the last 
	-->
	<beans profile="prod">    
      <context:property-placeholder location="classpath:application.properties, classpath:application-prod.properties"/>
	</beans>
	
	<beans profile="test">    
      <context:property-placeholder location="classpath:application.properties, classpath:application-test.properties"/>
	</beans>
	
	<beans profile="dev">    
      <context:property-placeholder location="classpath:application.properties, classpath:application-dev.properties"/>
	</beans>
	
	
</beans>